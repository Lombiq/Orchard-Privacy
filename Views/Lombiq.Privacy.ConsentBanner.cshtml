@inject OrchardCore.Environment.Shell.IShellFeaturesManager shellFeaturesManager
@using Microsoft.AspNetCore.Http.Features

<style asp-name="@ResourceNames.ConsentBanner"></style>
<script asp-name="jQuery"></script>

@{
    var bannerId = "privacy-consent-banner";
    var acceptButtonId = "privacy-consent-accept-button";
    var deniedButtonId = "privacy-consent-denied-button";

    var consentFeature = Context.Features.Get<ITrackingConsentFeature>();
    var acceptCookie = consentFeature?.CreateConsentCookie();
    var deniedCookie = acceptCookie.Replace("yes", "no");

    var isRegistrationConsentFeatureEnabled = (await shellFeaturesManager.GetEnabledFeaturesAsync())
        .Any(feature => feature.Id == FeatureNames.RegistrationConsent);

    // This represents the case when a user registered before the Registration consent feature was enabled
    // so they need to accept the consent now.
    var isAuthenticatedHasNotConsent = isRegistrationConsentFeatureEnabled && User.Identity.IsAuthenticated;
}

<shape Type="Lombiq_Privacy_ConsentBanner_Resources" />

<div id="@bannerId" class="privacy-consent-banner">
    <div class="modal-content">
        <div class="modal-header bg-secondary">
            <h5 class="modal-title" id="exampleModalLabel">@T["Privacy consent"]</h5>
        </div>
        <div class="modal-body">
            <shape Type="Lombiq_Privacy_ConsentBanner_Text" />
        </div>
        <div class="modal-footer justify-content-center">
            <div class="btn-group btn-group-lg" role="group">
                <button id="@acceptButtonId" type="button" class="btn btn-success" data-cookie-string="@acceptCookie">
                    @T["I agree, do not show me this any more"]
                </button>
                @if (!isAuthenticatedHasNotConsent)
                {
                    <button id="@deniedButtonId" type="button" class="btn btn-secondary" data-cookie-string="@deniedCookie">
                        @T["I don't agree, do not show me this any more"]
                    </button>
                }
            </div>
        </div>
    </div>
</div>

@if (!isAuthenticatedHasNotConsent)
{
    <script depends-on="jQuery" at="Foot">
        $("#@acceptButtonId").click(function () {
            document.cookie = $("#@acceptButtonId")[0].dataset.cookieString;
            $("#@bannerId").remove();
        });

        $("#@deniedButtonId").click(function () {
            document.cookie = $("#@deniedButtonId")[0].dataset.cookieString;
            $("#@bannerId").remove();
        });
    </script>
}
else
{
    var request = Context.Request;

    var acceptanceOfConsentURL = new UriBuilder
    {
        Scheme = request.Scheme,
        Host = request.Host.Host,
        Port = request.Host.Port ?? 80,
        Path = request.PathBase.HasValue
            ? $"{request.PathBase.Value}/Lombiq.Privacy/Consent/AcceptanceOfConsent"
            : "Lombiq.Privacy/Consent/AcceptanceOfConsent"
    }.ToString();

    <script depends-on="jQuery" at="Foot">
        $("#@acceptButtonId").click(function () {
            var antiforgerytoken = $("[name='__RequestVerificationToken']").val();

            $.post("@acceptanceOfConsentURL", { "__RequestVerificationToken": antiforgerytoken })
                .done(function () { $("#@bannerId").remove(); });
        });
    </script>
}

